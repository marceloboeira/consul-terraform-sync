openapi: "3.0.0"
info:
  version: 1.0.0
  title: CTS API
  description: An api for CTS
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8558
paths:
  /task:
    get:
      summary: Returns all tasks
      operationId: getTasks
      tags:
        - task
      description: |
        Returns all tasks
      responses:
        '200':
          description: task response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewTask'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Creates a new task
      operationId: createTask
      tags:
        - task
      description: |
        Creates a new task
      parameters:
        - name: run
          in: query
          description: |
            different modes for running. Inspect returns a plan and does not commit the task, now runs the task immediately
          required: false
          schema:
            type: string
            enum: [inspect, now]
      requestBody:
        description: Task to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '200':
          description: task response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTask'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /task/{name}:
    get:
      summary: Returns a task by name
      operationId: getTaskByName
      tags:
        - task
      description: |
        Returns all tasks
      parameters:
        - name: name
          in: path
          description: name of task to retrieve
          required: true
          schema:
            type: string
            example: "taskA"
      responses:
        '200':
          description: task response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTask'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a task by name
      operationId: deleteTaskByName
      description: deletes a single task based on the name provided
      tags:
        - task
      parameters:
        - name: name
          in: path
          description: name of task to delete
          required: true
          schema:
            type: string
            example: "taskA"
      responses:
        '204':
          description: task deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    catalog-services-condition:
      type: array
      items:
        type: object
        properties:
          regexp:
            type: string
            example: "web.*"
          namespace:
            type: string
            example: "default"
          node_meta:
            type: object
            additionalProperties:
              type: string
            example:
              key: value
          source_includes_var:
            type: boolean
            example: false
    consul-kv-condition:
      type: array
      items:
        type: object
        properties:
          path:
            type: string
            example: "my-key"
          recurse:
            type: boolean
            example: false
          datacenter:
            type: string
            example: "dc1"
          namespace:
            type: string
            example: "default"
          source_includes_var:
            type: boolean
            example: false
    schedule-condition:
      type: array
      items:
        type: object
        properties:
          cron:
            type: string
            example: "* * * * Mon"

    services-condition-source-input:
      type: array
      items:
        type: object
        properties:
          regexp:
            type: string
            example: "web.*"

    catalog-source-input:
      type: array
      items:
        type: object
        properties:
          regexp:
            type: string
            example: "web.*"
          namespace:
            type: string
            example: "default"
          node_meta:
            type: object
            additionalProperties:
              type: string
            example:
              key: value
          source_includes_var:
            type: boolean
            example: false
    consul-kv-source-input:
      type: array
      items:
        type: object
        properties:
          path:
            type: string
            example: "my-key"
          recurse:
            type: boolean
            example: false
          datacenter:
            type: string
            example: "dc1"
          namespace:
            type: string
            example: "default" 
    
    NewTask:
      type: object
      properties:
        description:
          type: string
          example: "an example task"
        enabled:
          type: boolean
          example: true
        name:
          type: string
          example: "taskA"
        providers:
          type: array
          items:
            type: string
          example: []
        services:
          type: array
          items:
            type: string
            example: ["web", "api"]
        source:
          type: string
          example: "org/example/module"
        variable_files:
          type: array
          items:
            type: string
          example: []
        version:
          type: string
          example: "1.0.0"
        working_dir:
          type: string
          example: "./sync-tasks/task-name"
        buffer_period:
          type: array
          items:
            type: object
            properties:
              enabled:
                type: boolean
                example: true
              max:
                type: string
                example: "5s"
              min:
                type: string
                example: "20s"
        condition:
          type: array
          items:
            type: object
            properties:
              catalog-services:
                $ref: '#/components/schemas/catalog-services-condition'
              services:
                $ref: '#/components/schemas/services-condition-source-input'              
              consul-kv:
                $ref: '#/components/schemas/consul-kv-condition'
              schedule:
                $ref: '#/components/schemas/schedule-condition'
        source_input:
          type: array
          items:
            type: object
            properties:
              services:
                $ref: '#/components/schemas/services-condition-source-input' 
              consul-kv:
                $ref: '#/components/schemas/consul-kv-source-input'
      required:
        - name
        - source
        - version
      example:
        catalog-services:
          regexp: ".*"
        description: ''
        enabled: true
        name: taskA
        providers: []
        services:
        - web
        - api
        source: org/example/module
        variable_files: []
        version: 1.0.0

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message